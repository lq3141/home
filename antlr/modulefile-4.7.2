#%Module1.0#####################################################################
##
## modules modulefile
##
proc ModulesHelp { } {
    puts stderr "\tThe antlr Module\n"
    puts stderr "\tThis module adds antlr to your path."
}

module-whatis	"loads the antlr environment"

# for Tcl script use only
if { [exec uname -o] == "Cygwin" } {
    set antlr_root  [file readlink ~/.antlr]
    set antlr_jar   [exec cygpath -aw ${antlr_root}/antlr-4.7.2-complete.jar]
    set jdk_lib_lnx [file dirname [file dirname [exec which java]]]/lib
    set jdk_lib     [exec cygpath -aw $jdk_lib_lnx]

    #setenv ANTLR_JAR $antlr_jar
    # If windows related CLASSPATH is defined already, nothing duplicated path
    # this's the beauty of module. Nice
    prepend-path    -d ";"  CLASSPATH  [subst -nobackslashes ".;${antlr_jar};${jdk_lib}"]
} else {
    prepend-path            CLASSPATH   .:~/.antlr/antlr-4.7.2-complete.jar
}

set-alias antlr4 "java org.antlr.v4.Tool"
set-alias grun   "java org.antlr.v4.gui.TestRig"
